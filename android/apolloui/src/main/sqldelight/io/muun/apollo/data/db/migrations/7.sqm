-- Sqlite3 doesn't support ALTER COLUMN, so we have to do this instead:
--
--  1. Rename your table to a temporary name.
--  2. Create a table exactly as the original one, except for the column in question.
--  3. Insert all the rows from the temporary table to the new one.
--  4. Delete the temporary table.
--
-- NOTE: this is actually not the correct way of handling ALTER COLUMN in Sqlite3, starting
-- from migrate 34 and 35 we handle these correctly.
-- See: https://www.sqlite.org/lang_altertable.html#otheralter

ALTER TABLE contacts
RENAME TO tmp_contacts;

CREATE TABLE contacts (
    id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
    hid INTEGER NOT NULL UNIQUE,
    first_name TEXT NOT NULL,
    last_name TEXT NOT NULL,
    profile_picture_url TEXT,
    public_key TEXT NOT NULL,
    public_key_path TEXT NOT NULL
);

INSERT INTO contacts SELECT *, '' FROM tmp_contacts;

DROP TABLE tmp_contacts;
